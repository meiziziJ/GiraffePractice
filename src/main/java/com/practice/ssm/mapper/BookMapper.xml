<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.practice.ssm.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.practice.ssm.model.Book">
    <constructor>
      <idArg column="book_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="book_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Float" jdbcType="REAL" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    book_id, book_name, price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="com.practice.ssm.model.Book">
    select
    <include refid="Base_Column_List" />
    from t_hibernate_book
    where book_id = #{book_id,jdbcType=INTEGER}
  </select>

  <select id="queryBooks" parameterType="com.practice.ssm.model.Book" resultType="com.practice.ssm.model.Book" useCache="true">
    select
    <include refid="Base_Column_List" />
    from t_hibernate_book
    where 1 = 1
    <if test="book_name != null">
      and book_name like #{book_name}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_hibernate_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.practice.ssm.model.Book">
    insert into t_hibernate_book (book_id, book_name, price
      )
    values (#{book_id,jdbcType=INTEGER}, #{book_name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.practice.ssm.model.Book">
    insert into t_hibernate_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.practice.ssm.model.Book">
    update t_hibernate_book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.practice.ssm.model.Book">
    update t_hibernate_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>

  <!--<select id="querySingleBook" parameterType="java.lang.Integer" resultMap="BookMap"
          resultType="com.practice.ssm.model.Book">
    select * from t_hibernate_book b, t_hibernate_book_category bc, t_hibernate_category c
    where b.book_id = bc.bid and bc.cid = c.category_id and b.book_id = #{bookId};
  </select>-->
</mapper>